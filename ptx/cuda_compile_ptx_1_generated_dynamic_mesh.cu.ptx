//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24817639
// Cuda compilation tools, release 10.0, V10.0.130
// Based on LLVM 3.4svn
//

.version 6.3
.target sm_30
.address_size 64

	// .globl	_Z14mesh_intersecti
.global .align 1 .b8 vertex_buffer[1];
.global .align 4 .b8 texcoord[12];
.global .align 4 .b8 geometric_normal[12];
.global .align 4 .b8 shading_normal[12];
.global .align 4 .b8 hit_point[12];
.global .align 4 .b8 back_hit_point[12];
.global .align 4 .b8 front_hit_point[12];
.global .align 4 .b8 ray[36];
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texcoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9hit_pointE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14back_hit_pointE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15front_hit_pointE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename8texcoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9hit_pointE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14back_hit_pointE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15front_hit_pointE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum8texcoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9hit_pointE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14back_hit_pointE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15front_hit_pointE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic8texcoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9hit_pointE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 104, 105, 116, 95, 112, 111, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14back_hit_pointE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 98, 97, 99, 107, 95, 104, 105, 116, 95, 112, 111, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15front_hit_pointE[26] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 102, 114, 111, 110, 116, 95, 104, 105, 116, 95, 112, 111, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation8texcoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9hit_pointE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14back_hit_pointE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15front_hit_pointE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .entry _Z14mesh_intersecti(
	.param .u32 _Z14mesh_intersecti_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<109>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<20>;


	ld.param.u32 	%r7, [_Z14mesh_intersecti_param_0];
	mul.lo.s32 	%r8, %r7, 3;
	cvt.s64.s32	%rd3, %r8;
	mov.u64 	%rd19, vertex_buffer;
	cvta.global.u64 	%rd2, %rd19;
	mov.u32 	%r5, 1;
	mov.u32 	%r6, 24;
	mov.u64 	%rd18, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r5, %r6, %rd3, %rd18, %rd18, %rd18);
	// inline asm
	ld.f32 	%f6, [%rd1+20];
	ld.f32 	%f5, [%rd1+16];
	ld.f32 	%f4, [%rd1+12];
	ld.f32 	%f3, [%rd1+8];
	ld.f32 	%f2, [%rd1+4];
	ld.f32 	%f1, [%rd1];
	add.s32 	%r9, %r8, 1;
	cvt.s64.s32	%rd9, %r9;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd2, %r5, %r6, %rd9, %rd18, %rd18, %rd18);
	// inline asm
	ld.f32 	%f12, [%rd7+20];
	ld.f32 	%f11, [%rd7+16];
	ld.f32 	%f10, [%rd7+12];
	ld.f32 	%f9, [%rd7+8];
	ld.f32 	%f8, [%rd7+4];
	ld.f32 	%f7, [%rd7];
	add.s32 	%r10, %r8, 2;
	cvt.s64.s32	%rd15, %r10;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd2, %r5, %r6, %rd15, %rd18, %rd18, %rd18);
	// inline asm
	ld.f32 	%f18, [%rd13+20];
	ld.f32 	%f17, [%rd13+16];
	ld.f32 	%f16, [%rd13+12];
	ld.f32 	%f15, [%rd13+8];
	ld.f32 	%f14, [%rd13+4];
	ld.f32 	%f13, [%rd13];
	sub.f32 	%f25, %f7, %f1;
	sub.f32 	%f26, %f8, %f2;
	sub.f32 	%f27, %f9, %f3;
	sub.f32 	%f28, %f1, %f13;
	sub.f32 	%f29, %f2, %f14;
	sub.f32 	%f30, %f3, %f15;
	mul.f32 	%f31, %f27, %f29;
	mul.f32 	%f32, %f26, %f30;
	sub.f32 	%f19, %f31, %f32;
	mul.f32 	%f33, %f25, %f30;
	mul.f32 	%f34, %f27, %f28;
	sub.f32 	%f20, %f33, %f34;
	mul.f32 	%f35, %f26, %f28;
	mul.f32 	%f36, %f25, %f29;
	sub.f32 	%f21, %f35, %f36;
	ld.global.f32 	%f37, [ray+12];
	ld.global.f32 	%f38, [ray+16];
	mul.f32 	%f39, %f38, %f20;
	fma.rn.f32 	%f40, %f37, %f19, %f39;
	ld.global.f32 	%f41, [ray+20];
	fma.rn.f32 	%f42, %f41, %f21, %f40;
	rcp.rn.f32 	%f43, %f42;
	ld.global.f32 	%f44, [ray];
	sub.f32 	%f45, %f1, %f44;
	ld.global.f32 	%f46, [ray+4];
	sub.f32 	%f47, %f2, %f46;
	ld.global.f32 	%f48, [ray+8];
	sub.f32 	%f49, %f3, %f48;
	mul.f32 	%f50, %f43, %f45;
	mul.f32 	%f51, %f43, %f47;
	mul.f32 	%f52, %f43, %f49;
	mul.f32 	%f53, %f38, %f52;
	mul.f32 	%f54, %f51, %f41;
	sub.f32 	%f55, %f53, %f54;
	mul.f32 	%f56, %f50, %f41;
	mul.f32 	%f57, %f52, %f37;
	sub.f32 	%f58, %f56, %f57;
	mul.f32 	%f59, %f51, %f37;
	mul.f32 	%f60, %f50, %f38;
	sub.f32 	%f61, %f59, %f60;
	mul.f32 	%f62, %f29, %f58;
	fma.rn.f32 	%f63, %f28, %f55, %f62;
	fma.rn.f32 	%f22, %f30, %f61, %f63;
	mul.f32 	%f64, %f26, %f58;
	fma.rn.f32 	%f65, %f25, %f55, %f64;
	fma.rn.f32 	%f23, %f27, %f61, %f65;
	mul.f32 	%f66, %f20, %f51;
	fma.rn.f32 	%f67, %f19, %f50, %f66;
	fma.rn.f32 	%f24, %f21, %f52, %f67;
	ld.global.f32 	%f68, [ray+32];
	setp.lt.f32	%p1, %f24, %f68;
	ld.global.f32 	%f69, [ray+28];
	setp.gt.f32	%p2, %f24, %f69;
	and.pred  	%p3, %p1, %p2;
	setp.ge.f32	%p4, %f22, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	setp.ge.f32	%p6, %f23, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	add.f32 	%f70, %f22, %f23;
	setp.le.f32	%p8, %f70, 0f3F800000;
	and.pred  	%p9, %p7, %p8;
	@!%p9 bra 	BB0_3;
	bra.uni 	BB0_1;

BB0_1:
	// inline asm
	call (%r11), _rt_potential_intersection, (%f24);
	// inline asm
	setp.eq.s32	%p10, %r11, 0;
	@%p10 bra 	BB0_3;

	mul.f32 	%f72, %f20, %f20;
	fma.rn.f32 	%f73, %f19, %f19, %f72;
	fma.rn.f32 	%f74, %f21, %f21, %f73;
	sqrt.rn.f32 	%f75, %f74;
	rcp.rn.f32 	%f76, %f75;
	mul.f32 	%f77, %f19, %f76;
	mul.f32 	%f78, %f20, %f76;
	mul.f32 	%f79, %f21, %f76;
	st.global.f32 	[geometric_normal], %f77;
	st.global.f32 	[geometric_normal+4], %f78;
	st.global.f32 	[geometric_normal+8], %f79;
	mul.f32 	%f80, %f16, %f23;
	fma.rn.f32 	%f81, %f10, %f22, %f80;
	mul.f32 	%f82, %f17, %f23;
	fma.rn.f32 	%f83, %f11, %f22, %f82;
	mul.f32 	%f84, %f18, %f23;
	fma.rn.f32 	%f85, %f12, %f22, %f84;
	mov.f32 	%f86, 0f3F800000;
	sub.f32 	%f87, %f86, %f22;
	sub.f32 	%f88, %f87, %f23;
	fma.rn.f32 	%f89, %f4, %f88, %f81;
	fma.rn.f32 	%f90, %f5, %f88, %f83;
	fma.rn.f32 	%f91, %f6, %f88, %f85;
	mul.f32 	%f92, %f90, %f90;
	fma.rn.f32 	%f93, %f89, %f89, %f92;
	fma.rn.f32 	%f94, %f91, %f91, %f93;
	sqrt.rn.f32 	%f95, %f94;
	rcp.rn.f32 	%f96, %f95;
	mul.f32 	%f97, %f89, %f96;
	mul.f32 	%f98, %f90, %f96;
	mul.f32 	%f99, %f91, %f96;
	st.global.f32 	[shading_normal], %f97;
	st.global.f32 	[shading_normal+4], %f98;
	st.global.f32 	[shading_normal+8], %f99;
	mov.u32 	%r13, 0;
	st.global.u32 	[texcoord+8], %r13;
	st.global.u32 	[texcoord+4], %r13;
	st.global.u32 	[texcoord], %r13;
	ld.global.f32 	%f100, [ray+12];
	ld.global.f32 	%f101, [ray+16];
	ld.global.f32 	%f102, [ray+20];
	ld.global.f32 	%f103, [ray];
	fma.rn.f32 	%f104, %f24, %f100, %f103;
	ld.global.f32 	%f105, [ray+4];
	fma.rn.f32 	%f106, %f24, %f101, %f105;
	ld.global.f32 	%f107, [ray+8];
	fma.rn.f32 	%f108, %f24, %f102, %f107;
	st.global.f32 	[hit_point], %f104;
	st.global.f32 	[hit_point+4], %f106;
	st.global.f32 	[hit_point+8], %f108;
	// inline asm
	call (%r12), _rt_report_intersection, (%r13);
	// inline asm

BB0_3:
	ret;
}

	// .globl	_Z11mesh_boundsiPf
.visible .entry _Z11mesh_boundsiPf(
	.param .u32 _Z11mesh_boundsiPf_param_0,
	.param .u64 _Z11mesh_boundsiPf_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<42>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<23>;


	ld.param.u32 	%r7, [_Z11mesh_boundsiPf_param_0];
	ld.param.u64 	%rd3, [_Z11mesh_boundsiPf_param_1];
	mul.lo.s32 	%r8, %r7, 3;
	cvt.s64.s32	%rd6, %r8;
	mov.u64 	%rd22, vertex_buffer;
	cvta.global.u64 	%rd5, %rd22;
	mov.u32 	%r5, 1;
	mov.u32 	%r6, 24;
	mov.u64 	%rd21, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r5, %r6, %rd6, %rd21, %rd21, %rd21);
	// inline asm
	ld.f32 	%f3, [%rd4+8];
	ld.f32 	%f2, [%rd4+4];
	ld.f32 	%f1, [%rd4];
	add.s32 	%r9, %r8, 1;
	cvt.s64.s32	%rd12, %r9;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd5, %r5, %r6, %rd12, %rd21, %rd21, %rd21);
	// inline asm
	ld.f32 	%f6, [%rd10+8];
	ld.f32 	%f5, [%rd10+4];
	ld.f32 	%f4, [%rd10];
	add.s32 	%r10, %r8, 2;
	cvt.s64.s32	%rd18, %r10;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd5, %r5, %r6, %rd18, %rd21, %rd21, %rd21);
	// inline asm
	sub.f32 	%f11, %f4, %f1;
	sub.f32 	%f12, %f5, %f2;
	sub.f32 	%f13, %f6, %f3;
	ld.f32 	%f9, [%rd16+8];
	ld.f32 	%f8, [%rd16+4];
	ld.f32 	%f7, [%rd16];
	sub.f32 	%f14, %f7, %f1;
	sub.f32 	%f15, %f8, %f2;
	sub.f32 	%f16, %f9, %f3;
	mul.f32 	%f17, %f12, %f16;
	mul.f32 	%f18, %f13, %f15;
	sub.f32 	%f19, %f17, %f18;
	mul.f32 	%f20, %f13, %f14;
	mul.f32 	%f21, %f11, %f16;
	sub.f32 	%f22, %f20, %f21;
	mul.f32 	%f23, %f11, %f15;
	mul.f32 	%f24, %f12, %f14;
	sub.f32 	%f25, %f23, %f24;
	mul.f32 	%f26, %f22, %f22;
	fma.rn.f32 	%f27, %f19, %f19, %f26;
	fma.rn.f32 	%f28, %f25, %f25, %f27;
	sqrt.rn.f32 	%f10, %f28;
	mov.pred 	%p5, 0;
	setp.leu.f32	%p4, %f10, 0f00000000;
	@%p4 bra 	BB1_2;

	abs.f32 	%f29, %f10;
	setp.neu.f32	%p5, %f29, 0f7F800000;

BB1_2:
	cvta.to.global.u64 	%rd2, %rd3;
	@%p5 bra 	BB1_4;
	bra.uni 	BB1_3;

BB1_4:
	min.f32 	%f30, %f1, %f4;
	min.f32 	%f31, %f30, %f7;
	min.f32 	%f32, %f2, %f5;
	min.f32 	%f33, %f32, %f8;
	min.f32 	%f34, %f3, %f6;
	min.f32 	%f35, %f34, %f9;
	st.global.f32 	[%rd2], %f31;
	st.global.f32 	[%rd2+4], %f33;
	st.global.f32 	[%rd2+8], %f35;
	max.f32 	%f36, %f1, %f4;
	max.f32 	%f37, %f36, %f7;
	max.f32 	%f38, %f2, %f5;
	max.f32 	%f39, %f38, %f8;
	max.f32 	%f40, %f3, %f6;
	max.f32 	%f41, %f40, %f9;
	st.global.f32 	[%rd2+12], %f37;
	st.global.f32 	[%rd2+16], %f39;
	st.global.f32 	[%rd2+20], %f41;
	bra.uni 	BB1_5;

BB1_3:
	mov.u32 	%r11, 2096152002;
	st.global.u32 	[%rd2+8], %r11;
	st.global.u32 	[%rd2+4], %r11;
	st.global.u32 	[%rd2], %r11;
	mov.u32 	%r12, -51331646;
	st.global.u32 	[%rd2+20], %r12;
	st.global.u32 	[%rd2+16], %r12;
	st.global.u32 	[%rd2+12], %r12;

BB1_5:
	ret;
}


